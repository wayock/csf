Short Answer

1. Why do programmers use pseudocode?

Programmers use pseudocode for a few reasons.  One reason is that it allows programmers to brainstorm
and think about what they want their code to do before writing that code any particular language.
Another advantage to using pseudocode is that any given project may require one particular
programming language or multiple programming languages to be utilized.  Writing the main functionality
first in pseudocode allows programmers to then apply that logic into specific programming languages.


2. If you run pseudocode on your computer what would happen?

Pseudocode does not run on a computer.  The computer does not know how to read it. Pseudocode
is for people to read and then translate the Pseudocode into a specific programming lanugage that will
run on the computer.


Programming Assignment
Write the following algorithms in pseudocode:

1. Create a function that takes two numbers and prints out the greater number.

INPUT first number
INPUT second number
IF first number is greater than the second number
  PRINT first number
ELSE
  PRINT second number


2. Create a function that prints out the numbers from 1 to 100.

SET the number to 1.
FOR each number up to 100
  PRINT number
ENDFOR when number reaches 100


3. Create a function that searches for a specific entry in a phonebook.

INPUT contact person's name
SEARCH array of objects in phonebook until object's name property equals contact person's name.
  PRINT contact person's object properties


4. Using the pseudocode you wrote for the previous question, implement
it in any computer language of your choice.

function getInfo(contactName){
return ( phonebook.find( entry => entry.name === contactName ));
}
console.log(getInfo('JoJo'));


Full example:

const phonebook = [
  {name: "John",
   number: 1231231224,
   address: "123 Fake St."},
  {name: "Matt",
  number: 1111111111,
  address: "11 1st Ave."},
   {name: "Eric",
  number: 1111111122,
  address: "44 9th Ave."},
   {name: "Mary",
  number: 9991111111,
  address: "11 1st Ave."},
   {name: "JoJo",
  number: 1111117676,
  address: "76 Broad St."},
]

function getInfo(contactName){
return ( phonebook.find( entry => entry.name === contactName ));
}

console.log(getInfo('JoJo'));  /* outputs  {
  address: "76 Broad St.",
  name: "JoJo",
  number: 1111117676
}  */
