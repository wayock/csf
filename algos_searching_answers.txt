Exercises

Short Answer

1. What is a real-life scenario that uses linear search?

I want to see if I have any dollar bills in my wallet that were printed in the year 2010.  The way to search
for them would be to look at the first bill in my wallet and then search until the last bill in my wallet.
If I find a bill with the year 2010, I can stop the search.  Since I do not sort my money based on the
date the bills are printed, this would be an unsorted linear search.


2. What is a real-life scenario that uses binary search?

Johnny Smith asks his teacher if he can look at his test to see how he did.  The teacher organizes the
tests alphabetically.  To find Johnny Smith's test, the teacher divides the pile of tests in half.  Then
divides in half again, and keeps doing that until he finds Johnny Smith's test.  Since Smith is probably
in the last 3/4 of the alphabet, this type of search is much faster than starting at the beginning of
the pile and searching through every test until finding Smith.


3. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to
find the value G using linear search?

7 iterations


4. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to
find the value G using binary search?

3 iterations


5. Given an unsorted collection of a million items, which algorithm would you choose between linear search
and binary search? Explain your reasoning.

I would choose a linear search because the list of items is unsorted.  A binary search only works with a
sorted collection.


6. Given a sorted collection of a million items, which algorithm would you choose between linear search
and binary search? Explain your reasoning.


I would choose a binary search.  When searching through a large number of sorted items, a binary search
will usually be faster than a linear search.  This is especially true if the item being searched for is
in the middle or end of the collection.



Programming Assignment:
1. You and a friend have set a wager to see who can find the word "Albatross" in the dictionary the
fastest. Write a program to allow you to win the bet.

Because "Albatross" is approximately 1800 words into the dictionary, a binary search would be a
faster way to search for the word than a linear search.

FUNCTION binarySearch(dictionary, word)
 #1
 Set lowerCase to a new variable with all of dictionary's strings lowercased
  FUNCTION dictionary.map
  return dictionary.toLowerCase()
 SET first to FIRST INDEX of dictionary // 0
 SET end to LAST INDEX of dictionary // dictionary.length - 1

 #2
 WHILE first <= end
   #3
   SET mid to (first + end) / 2      // Math.floor((0 + dictionary.length - 1) / 2)
   IF lowerCase[mid] > word THEN  //
     #4
     SET end to mid - 1
   ELSE IF dictionary[mid] < word
     #5
     SET first to mid + 1
   ELSE
     #6
     RETURN mid
   END IF
 END WHILE

 #7
 RETURN NOT FOUND


 function binarySearch(dictionary, word){
   var lowerCase = dictionary.map(function(dictionary){
    return dictionary.toLowerCase();
   });

   let first = 0;
   let end = dictionary.length - 1;

   while (first <= end ){
     let mid = Math.floor((first + end) / 2)
     console.log(first + ' ' + mid + ' ' + end);
     if (lowerCase[mid] > word.toLowerCase()){
       end = mid - 1;
     } else if (lowerCase[mid] < word.toLowerCase()){
       first = mid +1;
     } else {
       return mid
     }
   }
   return "not found";
 }

 console.log(binarySearch(dictionary1, 'Albatrous'));

 var dictionary1 = ['a', 'abamp', 'abase', 'abby', 'abgatha', 'abhor',
                   'abhorrent', 'air', 'Albatrous', 'bat', 'butter', 'cat', 'cauliflower',
                   'dog', 'fish', 'fishing', 'fry', 'frying', 'gnat', 'hat', 'igloo',
                    'jam', 'kite', 'kitten', 'lake', 'mat', 'nap', 'none', 'nothing',
                    'orange', 'Prince', 'queen', 'rat', 'razor', 'snake', 'silly', 'slack',
                    'take', 'try', 'umbrella', 'vision', 'wake', 'x-ray', 'yak', 'zebra'];


 console.log(binarySearch(dictionary1, 'Albatrous'));  // prints 8


2. You work at a pet store, and a child has asked you to net the only white-spotted goldfish from the
fish tank. Write a program that will help you net the right fish.

Because a bowl of goldfish is unsorted, you cannot use a binary search.  You need to use a
linear search instead.

/* FUNCTION Find White-spotted Goldfish
   FOR each fish in the bowl
     IF fish = target THEN
       RETURN
     END IF
   END FOR

   RETURN NOT FOUND  */

function findWhiteSpot(bowl, target ){
   var result = null, value;
   for(var i = 0; i < bowl.length; i++) {
     value = bowl[i];
     if(value === target){
       result = i;
       break;
     }
   }
   return result;
 };

 let fishbowl = ['goldfish', 'goldfish', 'goldfish', 'goldfish', 'goldfish',
                'goldfish', 'goldfish', 'goldfish', 'goldfish', 'goldfish',
                'goldfish', 'white-spotted goldfish', 'goldfish',
               'goldfish', 'goldfish', 'goldfish', 'goldfish', 'goldfish',
               'goldfish', 'goldfish', 'goldfish', 'goldfish', 'goldfish', ]

console.log(findWhiteSpot(fishbowl, 'white-spotted goldfish')); //prints 11
